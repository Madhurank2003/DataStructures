#include<iostream>
#include<bits/stdc++.h>
using namespace std;
void swap(int&a,int &b){
    a = a+b;
    b = a-b;
    a = a-b;
}
class maxHeap{
    private:
        int *arr;
        int size;
        int next;
    public:
        maxHeap();
        void insert(int);
        void deleteTop();
        int top();
        void display();
};

maxHeap::maxHeap(){
    arr  = new int[100];
    next = 1;
    size = 0;
}

void maxHeap::insert(int key){
    int i = next;
    while(i>1 && key >= arr[i/2]){
        arr[i] = arr[i/2];
        i = i/2;
    }
    arr[i] = key;
    next++;
    size++;
}

void maxHeap::deleteTop(){
    if(size==0){
        return;
    }
    arr[1] = arr[size];
    int i=1,j=2;
    while(j<size-1){
        if(arr[j+1]>arr[j]){
            j+=1;
        }
        if(arr[j]>arr[i]){
            swap(arr[j],arr[i]);
            i=j;
            j=2*i;
        }
        else{
            break;
        }
    }
    size--;
}

int maxHeap:: top(){
    if(size==0){
        return -1;
    }
    return arr[1];
}

void maxHeap::display(){
    if(size==0){
        cout<<"Heap Empty!!\n";
        return;
    }
    for(int i=1;i<=size;i++){
        cout<<arr[i]<<" ";
    }
    cout<<endl;
}

int main(){
    maxHeap H;
    int arr[] = {0,23,56,393,392,677,5};
    for(int i=1;i<=6;i++){
        H.insert(arr[i]);
    }
    cout<<"Heap Created\n";
    H.display();
    cout<<"Heap Deletions\n";
    while(H.top()!=-1){
        cout<<H.top()<<endl;
        H.deleteTop();
    }
    cout<<endl;
    return 0;
}
